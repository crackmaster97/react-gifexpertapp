{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setImpotValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAgB7C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAWH,GAF/C,+DAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAVvB,kBAgBZM,GAhBY,4CAAH,sDCAPO,EAAc,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOV,EAAW,EAAXA,IAIlC,OACI,sBAAKc,UAAU,6CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCLHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAkBtC,OAXAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAM,SAAAC,GAEFH,EAAS,CACNf,KAAMkB,EACNL,SAAS,SAGlB,CAACpB,IAEGqB,EDf2BK,CAAa1B,GAAlCa,EAHsB,EAG3BN,KAAca,EAHa,EAGbA,QAMtB,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAEjDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBAEb,qBAAKA,UAAU,YAAf,SAGQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEKA,GADAA,EAAIC,aEUlBgB,EA9BM,WAAQ,IAAD,EAEYzC,mBAAS,CAAC,gBAFtB,mBAEjB0C,EAFiB,KAEL3C,EAFK,KAQxB,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ2C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEKA,SAAWA,GADLA,Y,MCdnC6B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.ac2f7609.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from \"prop-types\";\n\n\nexport const AddCategory = ( {setCategories}) => {\n    \n    const [inputValue, setImpotValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setImpotValue(e.target.value);\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if ( inputValue.trim().length > 2 ){\n            setCategories( cats => [ inputValue, ...cats  ] );\n            setImpotValue('');\n        }\n    }\n\n    return (   \n        <form onSubmit={ handleSubmit }>\n            <input\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n                \n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\nexport const getGifs = async( category) => {\n\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )}&limit=10&api_key=Dzs08nB1NNjDPaYz7NIq6K5NZ0ObDeww`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map( img => {\n        return {\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n\n\n    })\n\n    return gifs;\n\n}","import React from 'react'\n\nexport const GifGridItem = ( { title, url } ) => {\n\n    // console.log( title, url );\n\n    return (\n        <div className=\"card animate__animated animate__zoomInLeft\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifs } from '../hooks/useFetchGifs'\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n\n    const { data:images , loading } = useFetchGifs(category);\n\n\n\n\n\n    return (\n        <> \n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\n\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\n\n            <div className=\"card-grid\">\n            \n                {\n                    images.map( img => (\n                        <GifGridItem \n                        key={img.id}\n                        { ...img }\n                        />\n                        ))\n                    }\n            \n            </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifs } from '../helpers/getGifs'\n\n\nexport const useFetchGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect(()=>{\n        getGifs(category)\n        .then( imgs => {\n          \n             setState({\n                data: imgs,\n                loading: false\n             });\n        })\n    }, [category])\n\n    return state; // { data:[], loading: true };\n\n}\n\n\n\n\n\n\n","import React, {useState} from 'react';\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nconst GifExpertApp = ( ) => {\n\n    const [categories, setCategories] = useState(['Dragon Ball'])\n\n    // const handleAdd = (e) => {\n    //     setCategories( cats => [...categories, 'Naruto' ] );\n    // }\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n\n            <ol>\n                {\n                    categories.map( category => (  \n                        <GifGrid \n                             key={ category }\n                             category={ category } \n                        />\n                    ))\n                 }\n            </ol>\n        </>\n    )\n\n}\n\n\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n \n  \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  // If you want to start measuring performance in your app, pass a function\n  // to log results (for example: reportWebVitals(console.log))\n  // or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n  // import reportWebVitals from './reportWebVitals';\n// reportWebVitals();\n"],"sourceRoot":""}